// Code generated by goa v3.1.3, DO NOT EDIT.
//
// HTTP request path constructors for the PolicyTemplate service.
//
// Command:
// $ goa gen github.com/rightscale/governance/front_service/design

package server

import (
	"fmt"
)

// CompilePolicyTemplatePath returns the URL path to the PolicyTemplate service compile HTTP endpoint.
func CompilePolicyTemplatePath(projectID uint) string {
	return fmt.Sprintf("/api/governance/projects/%v/policy_templates/compile", projectID)
}

// UploadPolicyTemplatePath returns the URL path to the PolicyTemplate service upload HTTP endpoint.
func UploadPolicyTemplatePath(projectID uint) string {
	return fmt.Sprintf("/api/governance/projects/%v/policy_templates", projectID)
}

// UpdatePolicyTemplatePath returns the URL path to the PolicyTemplate service update HTTP endpoint.
func UpdatePolicyTemplatePath(projectID uint, templateID string) string {
	return fmt.Sprintf("/api/governance/projects/%v/policy_templates/%v", projectID, templateID)
}

// RetrieveDataPolicyTemplatePath returns the URL path to the PolicyTemplate service retrieve_data HTTP endpoint.
func RetrieveDataPolicyTemplatePath(projectID uint, templateID string) string {
	return fmt.Sprintf("/api/governance/projects/%v/policy_templates/%v/retrieve_data", projectID, templateID)
}

// ShowPolicyTemplatePath returns the URL path to the PolicyTemplate service show HTTP endpoint.
func ShowPolicyTemplatePath(projectID uint, templateID string) string {
	return fmt.Sprintf("/api/governance/projects/%v/policy_templates/%v", projectID, templateID)
}

// IndexPolicyTemplatePath returns the URL path to the PolicyTemplate service index HTTP endpoint.
func IndexPolicyTemplatePath(projectID uint) string {
	return fmt.Sprintf("/api/governance/projects/%v/policy_templates", projectID)
}

// DeletePolicyTemplatePath returns the URL path to the PolicyTemplate service delete HTTP endpoint.
func DeletePolicyTemplatePath(projectID uint, templateID string) string {
	return fmt.Sprintf("/api/governance/projects/%v/policy_templates/%v", projectID, templateID)
}
