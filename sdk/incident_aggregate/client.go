// Code generated by goa v3.1.3, DO NOT EDIT.
//
// IncidentAggregate client
//
// Command:
// $ goa gen github.com/rightscale/governance/front_service/design

package incidentaggregate

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "IncidentAggregate" service client.
type Client struct {
	ShowEndpoint           goa.Endpoint
	ShowNonCatalogEndpoint goa.Endpoint
	IndexEndpoint          goa.Endpoint
}

// NewClient initializes a "IncidentAggregate" service client given the
// endpoints.
func NewClient(show, showNonCatalog, index goa.Endpoint) *Client {
	return &Client{
		ShowEndpoint:           show,
		ShowNonCatalogEndpoint: showNonCatalog,
		IndexEndpoint:          index,
	}
}

// Show calls the "show" endpoint of the "IncidentAggregate" service.
// Show may return the following errors:
//	- "not_found" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) Show(ctx context.Context, p *ShowPayload) (res *IncidentAggregate, err error) {
	var ires interface{}
	ires, err = c.ShowEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*IncidentAggregate), nil
}

// ShowNonCatalog calls the "show_non_catalog" endpoint of the
// "IncidentAggregate" service.
func (c *Client) ShowNonCatalog(ctx context.Context, p *ShowNonCatalogPayload) (res *IncidentAggregateNonCatalog, err error) {
	var ires interface{}
	ires, err = c.ShowNonCatalogEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*IncidentAggregateNonCatalog), nil
}

// Index calls the "index" endpoint of the "IncidentAggregate" service.
func (c *Client) Index(ctx context.Context, p *IndexPayload) (res *IncidentAggregateList, err error) {
	var ires interface{}
	ires, err = c.IndexEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*IncidentAggregateList), nil
}
